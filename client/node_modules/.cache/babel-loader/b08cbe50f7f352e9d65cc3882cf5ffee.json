{"ast":null,"code":"import _regeneratorRuntime from \"/Users/katayama/WebstormProjects/portfolio/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/katayama/WebstormProjects/portfolio/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport works from '../api/works';\nimport { FETCH_WORKS, FETCH_WORK } from './types';\nexport var fetchWorks = function fetchWorks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return works.get('/');\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: FETCH_WORKS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchWork = function fetchWork(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return works.get(\"/works/\".concat(id));\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_WORK,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/katayama/WebstormProjects/portfolio/client/src/actions/index.js"],"names":["works","FETCH_WORKS","FETCH_WORK","fetchWorks","dispatch","get","response","type","payload","data","fetchWork","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SACIC,WADJ,EAEIC,UAFJ,QAGO,SAHP;AAKA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLJ,KAAK,CAACK,GAAN,CAAU,GAAV,CADK;;AAAA;AACtBC,gBAAAA,QADsB;AAG5BF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEN,WAAR;AAAqBO,kBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAvC,iBAAD,CAAR;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAMP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACJJ,KAAK,CAACK,GAAN,kBAAoBM,EAApB,EADI;;AAAA;AACrBL,gBAAAA,QADqB;AAG3BF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEL,UAAR;AAAoBM,kBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAtC,iBAAD,CAAR;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import works from '../api/works';\nimport {\n    FETCH_WORKS,\n    FETCH_WORK\n} from './types';\n\nexport const fetchWorks = () => async dispatch => {\n    const response = await works.get('/');\n\n    dispatch({ type: FETCH_WORKS, payload: response.data });\n};\n\nexport const fetchWork = id => async dispatch => {\n    const response = await works.get(`/works/${id}`);\n\n    dispatch({ type: FETCH_WORK, payload: response.data });\n};"]},"metadata":{},"sourceType":"module"}