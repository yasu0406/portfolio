{"ast":null,"code":"var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport \"babel-polyfill\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nvar previousTouchMove = Symbol();\nvar scrolling = Symbol();\nvar wheelScroll = Symbol();\nvar touchMove = Symbol();\nvar keyPress = Symbol();\nvar onWindowResized = Symbol();\nvar addNextComponent = Symbol();\nvar scrollWindowUp = Symbol();\nvar scrollWindowDown = Symbol();\nvar ANIMATION_TIMER = 200;\nvar KEY_UP = 38;\nvar KEY_DOWN = 40;\nvar ReactPageScroller = (_temp = _class = function (_React$Component) {\n  _inherits(ReactPageScroller, _React$Component);\n\n  function ReactPageScroller(props) {\n    _classCallCheck(this, ReactPageScroller);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.componentDidMount = function () {\n      window.addEventListener('resize', _this[onWindowResized]);\n\n      document.ontouchmove = function (event) {\n        event.preventDefault();\n      };\n\n      _this._pageContainer.addEventListener(\"wheel\", _this[wheelScroll]);\n\n      _this._pageContainer.addEventListener(\"touchmove\", _this[touchMove]);\n\n      _this._pageContainer.addEventListener(\"keydown\", _this[keyPress]);\n\n      var componentsToRender = [];\n\n      if (!_.isNil(_this.props.children[_this.state.componentIndex])) {\n        componentsToRender.push(React.createElement(\"div\", {\n          key: _this.state.componentIndex,\n          ref: function ref(c) {\n            return _this[\"container_\" + _this.state.componentIndex] = c;\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          }\n        }, _this.props.children[_this.state.componentIndex]));\n      } else {\n        componentsToRender.push(React.createElement(\"div\", {\n          ref: function ref(c) {\n            return _this[\"container_\" + _this.state.componentIndex] = c;\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          }\n        }, _this.props.children));\n      }\n\n      _this[addNextComponent](componentsToRender);\n    };\n\n    _this.componentWillUnmount = function () {\n      window.removeEventListener('resize', _this[onWindowResized]);\n\n      _this._pageContainer.removeEventListener(\"wheel\", _this[wheelScroll]);\n\n      _this._pageContainer.removeEventListener(\"touchmove\", _this[touchMove]);\n\n      _this._pageContainer.removeEventListener(\"keydown\", _this[keyPress]);\n    };\n\n    _this.goToPage = function (number) {\n      var _this$props = _this.props,\n          pageOnChange = _this$props.pageOnChange,\n          children = _this$props.children;\n      var componentIndex = _this.state.componentIndex;\n      var componentsToRender = [].concat(_this.state.componentsToRender);\n\n      if (!_.isEqual(componentIndex, number)) {\n        if (!_.isNil(_this[\"container_\" + number]) && !_this[scrolling]) {\n          _this[scrolling] = true;\n          _this._pageContainer.style.transform = \"translate3d(0, \" + number * -100 + \"%, 0)\";\n\n          if (pageOnChange) {\n            pageOnChange(number + 1);\n          }\n\n          if (_.isNil(_this[\"container_\" + (number + 1)]) && !_.isNil(children[number + 1])) componentsToRender.push(React.createElement(\"div\", {\n            key: number + 1,\n            ref: function ref(c) {\n              return _this[\"container_\" + (number + 1)] = c;\n            },\n            style: {\n              height: \"100%\",\n              width: \"100%\"\n            }\n          }, children[number + 1]));\n          setTimeout(function () {\n            _this.setState({\n              componentIndex: number,\n              componentsToRender: componentsToRender\n            }, function () {\n              _this[scrolling] = false;\n              _this[previousTouchMove] = null;\n            });\n          }, _this.props.animationTimer + ANIMATION_TIMER);\n        } else if (!_this[scrolling] && !_.isNil(children[number])) {\n          var componentsLength = componentsToRender.length;\n\n          var _loop = function _loop(i) {\n            componentsToRender.push(React.createElement(\"div\", {\n              key: i,\n              ref: function ref(c) {\n                return _this[\"container_\" + i] = c;\n              },\n              style: {\n                height: \"100%\",\n                width: \"100%\"\n              }\n            }, children[i]));\n          };\n\n          for (var i = componentsLength; i <= number; i++) {\n            _loop(i);\n          }\n\n          if (!_.isNil(children[number + 1])) {\n            componentsToRender.push(React.createElement(\"div\", {\n              key: number + 1,\n              ref: function ref(c) {\n                return _this[\"container_\" + (number + 1)] = c;\n              },\n              style: {\n                height: \"100%\",\n                width: \"100%\"\n              }\n            }, children[number + 1]));\n          }\n\n          _this[scrolling] = true;\n\n          _this.setState({\n            componentsToRender: componentsToRender\n          }, function () {\n            _this._pageContainer.style.transform = \"translate3d(0, \" + number * -100 + \"%, 0)\";\n\n            if (pageOnChange) {\n              pageOnChange(number + 1);\n            }\n\n            setTimeout(function () {\n              _this.setState({\n                componentIndex: number\n              }, function () {\n                _this[scrolling] = false;\n                _this[previousTouchMove] = null;\n              });\n            }, _this.props.animationTimer + ANIMATION_TIMER);\n          });\n        }\n      }\n    };\n\n    _this[wheelScroll] = function (event) {\n      if (event.deltaY < 0) {\n        _this[scrollWindowUp]();\n      } else {\n        _this[scrollWindowDown]();\n      }\n    };\n\n    _this[touchMove] = function (event) {\n      if (!_.isNull(_this[previousTouchMove])) {\n        if (event.touches[0].clientY > _this[previousTouchMove]) {\n          _this[scrollWindowUp]();\n        } else {\n          _this[scrollWindowDown]();\n        }\n      } else {\n        _this[previousTouchMove] = event.touches[0].clientY;\n      }\n    };\n\n    _this[keyPress] = function (event) {\n      if (_.isEqual(event.keyCode, KEY_UP)) {\n        _this[scrollWindowUp]();\n      }\n\n      if (_.isEqual(event.keyCode, KEY_DOWN)) {\n        _this[scrollWindowDown]();\n      }\n    };\n\n    _this[onWindowResized] = function () {\n      _this.forceUpdate();\n    };\n\n    _this[addNextComponent] = function (onMountedComponents) {\n      var componentsToRender = [];\n\n      if (!_.isNil(onMountedComponents)) {\n        componentsToRender = [].concat(onMountedComponents);\n      }\n\n      componentsToRender = [].concat(componentsToRender, _this.state.componentsToRender);\n\n      if (!componentsToRender[_this.state.componentIndex + 1]) {\n        if (!_.isNil(_this.props.children[_this.state.componentIndex + 1])) {\n          componentsToRender.push(React.createElement(\"div\", {\n            key: _this.state.componentIndex + 1,\n            ref: function ref(c) {\n              return _this[\"container_\" + (_this.state.componentIndex + 1)] = c;\n            },\n            style: {\n              height: \"100%\",\n              width: \"100%\"\n            }\n          }, _this.props.children[_this.state.componentIndex + 1]));\n        }\n      }\n\n      _this.setState({\n        componentsToRender: [].concat(componentsToRender)\n      });\n    };\n\n    _this[scrollWindowUp] = function () {\n      if (!_.isNil(_this[\"container_\" + (_this.state.componentIndex - 1)]) && !_this[scrolling]) {\n        _this[scrolling] = true;\n        _this._pageContainer.style.transform = \"translate3d(0, \" + (_this.state.componentIndex - 1) * -100 + \"%, 0)\";\n\n        if (_this.props.pageOnChange) {\n          _this.props.pageOnChange(_this.state.componentIndex);\n        }\n\n        setTimeout(function () {\n          _this.setState(function (prevState) {\n            return {\n              componentIndex: prevState.componentIndex - 1\n            };\n          }, function () {\n            _this[scrolling] = false;\n            _this[previousTouchMove] = null;\n          });\n        }, _this.props.animationTimer + ANIMATION_TIMER);\n      } else if (_this.props.scrollUnavailable) {\n        _this.props.scrollUnavailable();\n      }\n    };\n\n    _this[scrollWindowDown] = function () {\n      if (!_.isNil(_this[\"container_\" + (_this.state.componentIndex + 1)]) && !_this[scrolling]) {\n        _this[scrolling] = true;\n        _this._pageContainer.style.transform = \"translate3d(0, \" + (_this.state.componentIndex + 1) * -100 + \"%, 0)\";\n\n        if (_this.props.pageOnChange) {\n          _this.props.pageOnChange(_this.state.componentIndex + 2);\n        }\n\n        setTimeout(function () {\n          _this.setState(function (prevState) {\n            return {\n              componentIndex: prevState.componentIndex + 1\n            };\n          }, function () {\n            _this[scrolling] = false;\n            _this[previousTouchMove] = null;\n\n            _this[addNextComponent]();\n          });\n        }, _this.props.animationTimer + ANIMATION_TIMER);\n      } else if (_this.props.scrollUnavailable) {\n        _this.props.scrollUnavailable();\n      }\n    };\n\n    _this.state = {\n      componentIndex: 0,\n      componentsToRender: []\n    };\n    _this[previousTouchMove] = null;\n    _this[scrolling] = false;\n    return _this;\n  }\n\n  ReactPageScroller.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        animationTimer = _props.animationTimer,\n        transitionTimingFunction = _props.transitionTimingFunction,\n        containerHeight = _props.containerHeight,\n        containerWidth = _props.containerWidth;\n    return React.createElement(\"div\", {\n      style: {\n        height: containerHeight,\n        width: containerWidth,\n        overflow: \"hidden\"\n      }\n    }, React.createElement(\"div\", {\n      ref: function ref(c) {\n        return _this2._pageContainer = c;\n      },\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        transition: \"transform \" + animationTimer + \"ms \" + transitionTimingFunction\n      },\n      tabIndex: 0\n    }, this.state.componentsToRender));\n  };\n\n  return ReactPageScroller;\n}(React.Component), _class.defaultProps = {\n  animationTimer: 1000,\n  transitionTimingFunction: \"ease-in-out\",\n  containerHeight: \"100vh\",\n  containerWidth: \"100vw\"\n}, _temp);\nexport { ReactPageScroller as default };\nReactPageScroller.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  animationTimer: PropTypes.number,\n  transitionTimingFunction: PropTypes.string,\n  pageOnChange: PropTypes.func,\n  scrollUnavailable: PropTypes.func,\n  containerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};","map":null,"metadata":{},"sourceType":"module"}